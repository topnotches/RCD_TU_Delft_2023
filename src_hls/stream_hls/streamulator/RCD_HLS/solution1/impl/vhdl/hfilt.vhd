-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hfilt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    src_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC;
    dst_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of hfilt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hfilt_hfilt,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.064000,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1171,HLS_SYN_LUT=2478,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal y : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal x : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_active_order : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_order : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal hfilt_stream_stream_axis_0_selection_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_2_ce0 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_selection_2_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_2_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_2_ce1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_selection_2_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_buffer_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal hfilt_stream_stream_axis_0_buffer_2_ce1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_buffer_2_we1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_buffer_2_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal hfilt_stream_stream_axis_0_buffer_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal hfilt_stream_stream_axis_0_buffer_1_ce1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_buffer_1_we1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_buffer_1_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal hfilt_stream_stream_axis_0_buffer_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal hfilt_stream_stream_axis_0_buffer_ce1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_buffer_we1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_buffer_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal hfilt_stream_stream_axis_0_selection_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_ce0 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_selection_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_ce1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_selection_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_1_ce0 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_selection_1_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_1_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_selection_1_ce1 : STD_LOGIC;
    signal hfilt_stream_stream_axis_0_selection_1_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hfilt_stream_stream_axis_0_active_pixels_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_5_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_5_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_6_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_6_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal hfilt_stream_stream_axis_0_active_pixels_6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal src_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dst_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal p_in_data_reg_1247 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal regslice_both_dst_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_in_data_reg_1247_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_data_reg_1247_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_data_reg_1247_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_data_reg_1247_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_in_keep_reg_1252 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_keep_reg_1252_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_keep_reg_1252_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_keep_reg_1252_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_keep_reg_1252_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_strb_reg_1257 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_strb_reg_1257_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_strb_reg_1257_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_strb_reg_1257_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_strb_reg_1257_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_in_user_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_user_reg_1262_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_user_reg_1262_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_user_reg_1262_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_user_reg_1262_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_last_reg_1270 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_last_reg_1270_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_last_reg_1270_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_last_reg_1270_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_last_reg_1270_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_id_reg_1277 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_id_reg_1277_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_id_reg_1277_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_id_reg_1277_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_id_reg_1277_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_dest_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_dest_reg_1282_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_dest_reg_1282_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_dest_reg_1282_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_dest_reg_1282_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln55_fu_359_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln55_reg_1287 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln55_reg_1287_pp0_iter1_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln55_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_reg_1312_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_reg_1312_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_reg_1312_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_reg_1312_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal hfilt_stream_stream_axis_0_selection_2_load_reg_1316 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal hfilt_stream_stream_axis_0_selection_1_load_reg_1351 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln119_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_1359_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_1359_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_1359_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal hfilt_stream_stream_axis_0_selection_1_load_1_reg_1367 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal hfilt_stream_stream_axis_0_selection_2_load_1_reg_1374 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_583_p9 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_reg_1379 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln84_fu_700_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln84_reg_1386 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln87_fu_727_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln87_reg_1392 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln83_fu_741_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln83_reg_1397 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_reg_1402 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_1408 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln94_fu_818_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln94_reg_1413 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_reg_1418 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_1424 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln104_fu_895_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln104_reg_1429 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_14_fu_943_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_14_reg_1434 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal abscond_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_16_fu_995_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_16_reg_1445 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond10_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal abscond10_reg_1451 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_18_fu_1047_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_18_reg_1456 : STD_LOGIC_VECTOR (10 downto 0);
    signal abscond13_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal abscond13_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal zext_ln67_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln67_1_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln67_2_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_fu_1234_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln55_1_fu_480_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln159_fu_499_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln55_2_fu_408_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_531_p9 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal select_ln58_3_fu_367_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln147_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln153_fu_388_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln147_fu_394_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln58_1_fu_430_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln58_2_fu_437_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_458_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln157_fu_474_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln159_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln165_fu_493_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_531_p7 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_583_p7 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln85_fu_620_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_639_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln81_fu_650_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_670_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln83_fu_681_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_689_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_716_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln70_fu_623_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln84_fu_685_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln83_1_fu_731_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln83_2_fu_737_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln83_fu_654_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_747_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_761_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_785_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln98_fu_794_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln95_2_fu_771_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln94_1_fu_808_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln94_fu_814_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln94_1_fu_757_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_824_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_838_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_862_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln108_fu_871_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln105_2_fu_848_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln104_1_fu_885_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln104_fu_891_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln104_1_fu_834_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_904_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln84_2_fu_911_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln84_1_fu_901_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln84_fu_915_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln87_fu_921_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln84_3_fu_928_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln84_fu_931_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln83_1_fu_925_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln86_fu_937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln_fu_956_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln95_fu_963_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln95_3_fu_953_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln95_fu_967_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln96_fu_973_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln95_1_fu_980_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln95_fu_983_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln94_2_fu_977_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln97_fu_989_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln1_fu_1008_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln105_fu_1015_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln105_3_fu_1005_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln105_fu_1019_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln106_fu_1025_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln105_1_fu_1032_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln105_fu_1035_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln104_2_fu_1029_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln107_fu_1041_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_15_fu_1068_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal red_sum_fu_1073_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_17_fu_1083_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal green_sum_fu_1088_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_19_fu_1098_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal blue_sum_fu_1103_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_1113_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln111_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln111_fu_1079_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1137_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln112_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln112_fu_1094_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_1161_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln113_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln113_fu_1109_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal blue_fu_1177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal green_fu_1153_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal red_fu_1129_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal dn_fu_1185_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln58_fu_1061_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1199_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln119_1_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln119_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln116_fu_1195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln146_fu_1228_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_apdone_blk : STD_LOGIC;
    signal src_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal src_TVALID_int_regslice : STD_LOGIC;
    signal src_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal src_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_src_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal src_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_src_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_user_V_U_apdone_blk : STD_LOGIC;
    signal src_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_apdone_blk : STD_LOGIC;
    signal src_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_id_V_U_apdone_blk : STD_LOGIC;
    signal src_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal src_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_dest_V_U_ack_in : STD_LOGIC;
    signal dst_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal dst_TVALID_int_regslice : STD_LOGIC;
    signal dst_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dst_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_vld_out : STD_LOGIC;
    signal tmp_fu_531_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_531_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_531_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_583_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_583_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_583_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component hfilt_sparsemux_7_2_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        def : IN STD_LOGIC_VECTOR (23 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component hfilt_mux_3_2_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component hfilt_hfilt_stream_stream_axis_0_selection_2_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component hfilt_hfilt_stream_stream_axis_0_buffer_2_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (23 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component hfilt_hfilt_stream_stream_axis_0_selection_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component hfilt_hfilt_stream_stream_axis_0_selection_1_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component hfilt_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    hfilt_stream_stream_axis_0_selection_2_U : component hfilt_hfilt_stream_stream_axis_0_selection_2_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hfilt_stream_stream_axis_0_selection_2_address0,
        ce0 => hfilt_stream_stream_axis_0_selection_2_ce0,
        q0 => hfilt_stream_stream_axis_0_selection_2_q0,
        address1 => hfilt_stream_stream_axis_0_selection_2_address1,
        ce1 => hfilt_stream_stream_axis_0_selection_2_ce1,
        q1 => hfilt_stream_stream_axis_0_selection_2_q1);

    hfilt_stream_stream_axis_0_buffer_2_U : component hfilt_hfilt_stream_stream_axis_0_buffer_2_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address1 => hfilt_stream_stream_axis_0_buffer_2_address1,
        ce1 => hfilt_stream_stream_axis_0_buffer_2_ce1,
        we1 => hfilt_stream_stream_axis_0_buffer_2_we1,
        d1 => trunc_ln55_reg_1287,
        q1 => hfilt_stream_stream_axis_0_buffer_2_q1);

    hfilt_stream_stream_axis_0_buffer_1_U : component hfilt_hfilt_stream_stream_axis_0_buffer_2_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address1 => hfilt_stream_stream_axis_0_buffer_1_address1,
        ce1 => hfilt_stream_stream_axis_0_buffer_1_ce1,
        we1 => hfilt_stream_stream_axis_0_buffer_1_we1,
        d1 => trunc_ln55_reg_1287,
        q1 => hfilt_stream_stream_axis_0_buffer_1_q1);

    hfilt_stream_stream_axis_0_buffer_U : component hfilt_hfilt_stream_stream_axis_0_buffer_2_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address1 => hfilt_stream_stream_axis_0_buffer_address1,
        ce1 => hfilt_stream_stream_axis_0_buffer_ce1,
        we1 => hfilt_stream_stream_axis_0_buffer_we1,
        d1 => trunc_ln55_reg_1287,
        q1 => hfilt_stream_stream_axis_0_buffer_q1);

    hfilt_stream_stream_axis_0_selection_U : component hfilt_hfilt_stream_stream_axis_0_selection_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hfilt_stream_stream_axis_0_selection_address0,
        ce0 => hfilt_stream_stream_axis_0_selection_ce0,
        q0 => hfilt_stream_stream_axis_0_selection_q0,
        address1 => hfilt_stream_stream_axis_0_selection_address1,
        ce1 => hfilt_stream_stream_axis_0_selection_ce1,
        q1 => hfilt_stream_stream_axis_0_selection_q1);

    hfilt_stream_stream_axis_0_selection_1_U : component hfilt_hfilt_stream_stream_axis_0_selection_1_ROM_AUTO_1R
    generic map (
        DataWidth => 2,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hfilt_stream_stream_axis_0_selection_1_address0,
        ce0 => hfilt_stream_stream_axis_0_selection_1_ce0,
        q0 => hfilt_stream_stream_axis_0_selection_1_q0,
        address1 => hfilt_stream_stream_axis_0_selection_1_address1,
        ce1 => hfilt_stream_stream_axis_0_selection_1_ce1,
        q1 => hfilt_stream_stream_axis_0_selection_1_q1);

    sparsemux_7_2_24_1_1_U1 : component hfilt_sparsemux_7_2_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 24,
        CASE1 => "01",
        din1_WIDTH => 24,
        CASE2 => "10",
        din2_WIDTH => 24,
        def_WIDTH => 24,
        sel_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => hfilt_stream_stream_axis_0_buffer_2_q1,
        din1 => hfilt_stream_stream_axis_0_buffer_1_q1,
        din2 => hfilt_stream_stream_axis_0_buffer_q1,
        def => tmp_fu_531_p7,
        sel => hfilt_stream_stream_axis_0_selection_2_load_reg_1316,
        dout => tmp_fu_531_p9);

    sparsemux_7_2_24_1_1_U2 : component hfilt_sparsemux_7_2_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 24,
        CASE1 => "01",
        din1_WIDTH => 24,
        CASE2 => "10",
        din2_WIDTH => 24,
        def_WIDTH => 24,
        sel_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => hfilt_stream_stream_axis_0_buffer_2_q1,
        din1 => hfilt_stream_stream_axis_0_buffer_1_q1,
        din2 => hfilt_stream_stream_axis_0_buffer_q1,
        def => tmp_1_fu_583_p7,
        sel => hfilt_stream_stream_axis_0_selection_1_load_reg_1351,
        dout => tmp_1_fu_583_p9);

    mux_3_2_24_1_1_U3 : component hfilt_mux_3_2_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => hfilt_stream_stream_axis_0_active_pixels_0,
        din1 => hfilt_stream_stream_axis_0_active_pixels_1,
        din2 => hfilt_stream_stream_axis_0_active_pixels,
        din3 => hfilt_stream_stream_axis_0_selection_1_load_1_reg_1367,
        dout => tmp_3_fu_639_p5);

    mux_3_2_24_1_1_U4 : component hfilt_mux_3_2_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => hfilt_stream_stream_axis_0_active_pixels_5_0,
        din1 => hfilt_stream_stream_axis_0_active_pixels_5_1,
        din2 => hfilt_stream_stream_axis_0_active_pixels_5,
        din3 => hfilt_stream_stream_axis_0_selection_2_load_1_reg_1374,
        dout => tmp_4_fu_670_p5);

    mux_3_2_24_1_1_U5 : component hfilt_mux_3_2_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => hfilt_stream_stream_axis_0_active_pixels_5_0,
        din1 => hfilt_stream_stream_axis_0_active_pixels_5_1,
        din2 => hfilt_stream_stream_axis_0_active_pixels_5,
        din3 => hfilt_stream_stream_axis_0_selection_1_load_1_reg_1367,
        dout => tmp_5_fu_689_p5);

    mux_3_2_24_1_1_U6 : component hfilt_mux_3_2_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => hfilt_stream_stream_axis_0_active_pixels_6_0,
        din1 => hfilt_stream_stream_axis_0_active_pixels_6_1,
        din2 => hfilt_stream_stream_axis_0_active_pixels_6,
        din3 => hfilt_stream_stream_axis_0_selection_1_load_1_reg_1367,
        dout => tmp_6_fu_716_p5);

    regslice_both_src_V_data_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDATA,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_data_V_U_ack_in,
        data_out => src_TDATA_int_regslice,
        vld_out => src_TVALID_int_regslice,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_data_V_U_apdone_blk);

    regslice_both_src_V_keep_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TKEEP,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_keep_V_U_ack_in,
        data_out => src_TKEEP_int_regslice,
        vld_out => regslice_both_src_V_keep_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_keep_V_U_apdone_blk);

    regslice_both_src_V_strb_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TSTRB,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_strb_V_U_ack_in,
        data_out => src_TSTRB_int_regslice,
        vld_out => regslice_both_src_V_strb_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_strb_V_U_apdone_blk);

    regslice_both_src_V_user_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TUSER,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_user_V_U_ack_in,
        data_out => src_TUSER_int_regslice,
        vld_out => regslice_both_src_V_user_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_user_V_U_apdone_blk);

    regslice_both_src_V_last_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TLAST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_last_V_U_ack_in,
        data_out => src_TLAST_int_regslice,
        vld_out => regslice_both_src_V_last_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_last_V_U_apdone_blk);

    regslice_both_src_V_id_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TID,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_id_V_U_ack_in,
        data_out => src_TID_int_regslice,
        vld_out => regslice_both_src_V_id_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_id_V_U_apdone_blk);

    regslice_both_src_V_dest_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDEST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_dest_V_U_ack_in,
        data_out => src_TDEST_int_regslice,
        vld_out => regslice_both_src_V_dest_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_dest_V_U_apdone_blk);

    regslice_both_dst_V_data_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dst_TDATA_int_regslice,
        vld_in => dst_TVALID_int_regslice,
        ack_in => dst_TREADY_int_regslice,
        data_out => dst_TDATA,
        vld_out => regslice_both_dst_V_data_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_data_V_U_apdone_blk);

    regslice_both_dst_V_keep_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_in_keep_reg_1252_pp0_iter4_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_keep_V_U_ack_in_dummy,
        data_out => dst_TKEEP,
        vld_out => regslice_both_dst_V_keep_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_keep_V_U_apdone_blk);

    regslice_both_dst_V_strb_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_in_strb_reg_1257_pp0_iter4_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_strb_V_U_ack_in_dummy,
        data_out => dst_TSTRB,
        vld_out => regslice_both_dst_V_strb_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_strb_V_U_apdone_blk);

    regslice_both_dst_V_user_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_in_user_reg_1262_pp0_iter4_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_user_V_U_ack_in_dummy,
        data_out => dst_TUSER,
        vld_out => regslice_both_dst_V_user_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_user_V_U_apdone_blk);

    regslice_both_dst_V_last_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_in_last_reg_1270_pp0_iter4_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_last_V_U_ack_in_dummy,
        data_out => dst_TLAST,
        vld_out => regslice_both_dst_V_last_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_last_V_U_apdone_blk);

    regslice_both_dst_V_id_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_in_id_reg_1277_pp0_iter4_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_id_V_U_ack_in_dummy,
        data_out => dst_TID,
        vld_out => regslice_both_dst_V_id_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_id_V_U_apdone_blk);

    regslice_both_dst_V_dest_V_U : component hfilt_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_in_dest_reg_1282_pp0_iter4_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_dest_V_U_ack_in_dummy,
        data_out => dst_TDEST,
        vld_out => regslice_both_dst_V_dest_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                abscond10_reg_1451 <= abscond10_fu_999_p2;
                abscond13_reg_1462 <= abscond13_fu_1051_p2;
                abscond_reg_1440 <= abscond_fu_947_p2;
                add_ln104_reg_1429 <= add_ln104_fu_895_p2;
                add_ln83_reg_1397 <= add_ln83_fu_741_p2;
                add_ln94_reg_1413 <= add_ln94_fu_818_p2;
                empty_14_reg_1434 <= empty_14_fu_943_p1;
                empty_16_reg_1445 <= empty_16_fu_995_p1;
                empty_18_reg_1456 <= empty_18_fu_1047_p1;
                icmp_ln119_reg_1359_pp0_iter2_reg <= icmp_ln119_reg_1359;
                icmp_ln119_reg_1359_pp0_iter3_reg <= icmp_ln119_reg_1359_pp0_iter2_reg;
                icmp_ln119_reg_1359_pp0_iter4_reg <= icmp_ln119_reg_1359_pp0_iter3_reg;
                or_ln55_reg_1312_pp0_iter2_reg <= or_ln55_reg_1312_pp0_iter1_reg;
                or_ln55_reg_1312_pp0_iter3_reg <= or_ln55_reg_1312_pp0_iter2_reg;
                or_ln55_reg_1312_pp0_iter4_reg <= or_ln55_reg_1312_pp0_iter3_reg;
                p_in_data_reg_1247_pp0_iter2_reg <= p_in_data_reg_1247_pp0_iter1_reg;
                p_in_data_reg_1247_pp0_iter3_reg <= p_in_data_reg_1247_pp0_iter2_reg;
                p_in_data_reg_1247_pp0_iter4_reg <= p_in_data_reg_1247_pp0_iter3_reg;
                p_in_dest_reg_1282_pp0_iter2_reg <= p_in_dest_reg_1282_pp0_iter1_reg;
                p_in_dest_reg_1282_pp0_iter3_reg <= p_in_dest_reg_1282_pp0_iter2_reg;
                p_in_dest_reg_1282_pp0_iter4_reg <= p_in_dest_reg_1282_pp0_iter3_reg;
                p_in_id_reg_1277_pp0_iter2_reg <= p_in_id_reg_1277_pp0_iter1_reg;
                p_in_id_reg_1277_pp0_iter3_reg <= p_in_id_reg_1277_pp0_iter2_reg;
                p_in_id_reg_1277_pp0_iter4_reg <= p_in_id_reg_1277_pp0_iter3_reg;
                p_in_keep_reg_1252_pp0_iter2_reg <= p_in_keep_reg_1252_pp0_iter1_reg;
                p_in_keep_reg_1252_pp0_iter3_reg <= p_in_keep_reg_1252_pp0_iter2_reg;
                p_in_keep_reg_1252_pp0_iter4_reg <= p_in_keep_reg_1252_pp0_iter3_reg;
                p_in_last_reg_1270_pp0_iter2_reg <= p_in_last_reg_1270_pp0_iter1_reg;
                p_in_last_reg_1270_pp0_iter3_reg <= p_in_last_reg_1270_pp0_iter2_reg;
                p_in_last_reg_1270_pp0_iter4_reg <= p_in_last_reg_1270_pp0_iter3_reg;
                p_in_strb_reg_1257_pp0_iter2_reg <= p_in_strb_reg_1257_pp0_iter1_reg;
                p_in_strb_reg_1257_pp0_iter3_reg <= p_in_strb_reg_1257_pp0_iter2_reg;
                p_in_strb_reg_1257_pp0_iter4_reg <= p_in_strb_reg_1257_pp0_iter3_reg;
                p_in_user_reg_1262_pp0_iter2_reg <= p_in_user_reg_1262_pp0_iter1_reg;
                p_in_user_reg_1262_pp0_iter3_reg <= p_in_user_reg_1262_pp0_iter2_reg;
                p_in_user_reg_1262_pp0_iter4_reg <= p_in_user_reg_1262_pp0_iter3_reg;
                tmp_12_reg_1418 <= tmp_5_fu_689_p5(23 downto 16);
                tmp_14_reg_1424 <= tmp_6_fu_716_p5(23 downto 16);
                tmp_1_reg_1379 <= tmp_1_fu_583_p9;
                tmp_2_reg_1408 <= tmp_6_fu_716_p5(15 downto 8);
                tmp_9_reg_1402 <= tmp_5_fu_689_p5(15 downto 8);
                trunc_ln84_reg_1386 <= trunc_ln84_fu_700_p1;
                trunc_ln87_reg_1392 <= trunc_ln87_fu_727_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((hfilt_stream_stream_axis_0_selection_q0 = ap_const_lv2_1)) and not((hfilt_stream_stream_axis_0_selection_q0 = ap_const_lv2_0)) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                hfilt_stream_stream_axis_0_active_pixels <= tmp_fu_531_p9;
                hfilt_stream_stream_axis_0_active_pixels_5 <= tmp_1_fu_583_p9;
                hfilt_stream_stream_axis_0_active_pixels_6 <= trunc_ln55_reg_1287_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((hfilt_stream_stream_axis_0_selection_q0 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                hfilt_stream_stream_axis_0_active_pixels_0 <= tmp_fu_531_p9;
                hfilt_stream_stream_axis_0_active_pixels_5_0 <= tmp_1_fu_583_p9;
                hfilt_stream_stream_axis_0_active_pixels_6_0 <= trunc_ln55_reg_1287_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((hfilt_stream_stream_axis_0_selection_q0 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                hfilt_stream_stream_axis_0_active_pixels_1 <= tmp_fu_531_p9;
                hfilt_stream_stream_axis_0_active_pixels_5_1 <= tmp_1_fu_583_p9;
                hfilt_stream_stream_axis_0_active_pixels_6_1 <= trunc_ln55_reg_1287_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                hfilt_stream_stream_axis_0_selection_1_load_1_reg_1367 <= hfilt_stream_stream_axis_0_selection_1_q0;
                hfilt_stream_stream_axis_0_selection_2_load_1_reg_1374 <= hfilt_stream_stream_axis_0_selection_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                hfilt_stream_stream_axis_0_selection_1_load_reg_1351 <= hfilt_stream_stream_axis_0_selection_1_q1;
                hfilt_stream_stream_axis_0_selection_2_load_reg_1316 <= hfilt_stream_stream_axis_0_selection_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln119_reg_1359 <= icmp_ln119_fu_468_p2;
                or_ln55_reg_1312 <= or_ln55_fu_402_p2;
                or_ln55_reg_1312_pp0_iter1_reg <= or_ln55_reg_1312;
                p_in_data_reg_1247 <= src_TDATA_int_regslice;
                p_in_data_reg_1247_pp0_iter1_reg <= p_in_data_reg_1247;
                p_in_dest_reg_1282 <= src_TDEST_int_regslice;
                p_in_dest_reg_1282_pp0_iter1_reg <= p_in_dest_reg_1282;
                p_in_id_reg_1277 <= src_TID_int_regslice;
                p_in_id_reg_1277_pp0_iter1_reg <= p_in_id_reg_1277;
                p_in_keep_reg_1252 <= src_TKEEP_int_regslice;
                p_in_keep_reg_1252_pp0_iter1_reg <= p_in_keep_reg_1252;
                p_in_last_reg_1270 <= src_TLAST_int_regslice;
                p_in_last_reg_1270_pp0_iter1_reg <= p_in_last_reg_1270;
                p_in_strb_reg_1257 <= src_TSTRB_int_regslice;
                p_in_strb_reg_1257_pp0_iter1_reg <= p_in_strb_reg_1257;
                p_in_user_reg_1262 <= src_TUSER_int_regslice;
                p_in_user_reg_1262_pp0_iter1_reg <= p_in_user_reg_1262;
                trunc_ln55_reg_1287 <= trunc_ln55_fu_359_p1;
                trunc_ln55_reg_1287_pp0_iter1_reg <= trunc_ln55_reg_1287;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_ln55_reg_1312 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_ln55_reg_1312 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                select_active_order <= select_ln159_fu_499_p3;
                x <= select_ln55_1_fu_480_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_fu_402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                select_order <= select_ln55_2_fu_408_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_1312_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                y <= select_ln55_fu_1234_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    abscond10_fu_999_p2 <= "1" when (signed(sub_ln97_fu_989_p2) > signed(ap_const_lv12_0)) else "0";
    abscond13_fu_1051_p2 <= "1" when (signed(sub_ln107_fu_1041_p2) > signed(ap_const_lv12_0)) else "0";
    abscond_fu_947_p2 <= "1" when (signed(sub_ln86_fu_937_p2) > signed(ap_const_lv12_0)) else "0";
    add_ln104_1_fu_885_p2 <= std_logic_vector(unsigned(zext_ln108_fu_871_p1) + unsigned(zext_ln105_2_fu_848_p1));
    add_ln104_fu_895_p2 <= std_logic_vector(unsigned(zext_ln104_fu_891_p1) + unsigned(zext_ln104_1_fu_834_p1));
    add_ln105_fu_1019_p2 <= std_logic_vector(unsigned(zext_ln105_fu_1015_p1) + unsigned(zext_ln105_3_fu_1005_p1));
    add_ln146_fu_1228_p2 <= std_logic_vector(unsigned(select_ln58_fu_1061_p3) + unsigned(ap_const_lv16_1));
    add_ln153_fu_388_p2 <= std_logic_vector(unsigned(select_ln58_3_fu_367_p3) + unsigned(ap_const_lv8_1));
    add_ln157_fu_474_p2 <= std_logic_vector(unsigned(select_ln58_1_fu_430_p3) + unsigned(ap_const_lv16_1));
    add_ln165_fu_493_p2 <= std_logic_vector(unsigned(select_ln58_2_fu_437_p3) + unsigned(ap_const_lv8_1));
    add_ln83_1_fu_731_p2 <= std_logic_vector(unsigned(zext_ln70_fu_623_p1) + unsigned(zext_ln84_fu_685_p1));
    add_ln83_fu_741_p2 <= std_logic_vector(unsigned(zext_ln83_2_fu_737_p1) + unsigned(zext_ln83_fu_654_p1));
    add_ln84_fu_915_p2 <= std_logic_vector(unsigned(zext_ln84_2_fu_911_p1) + unsigned(zext_ln84_1_fu_901_p1));
    add_ln94_1_fu_808_p2 <= std_logic_vector(unsigned(zext_ln98_fu_794_p1) + unsigned(zext_ln95_2_fu_771_p1));
    add_ln94_fu_818_p2 <= std_logic_vector(unsigned(zext_ln94_fu_814_p1) + unsigned(zext_ln94_1_fu_757_p1));
    add_ln95_fu_967_p2 <= std_logic_vector(unsigned(zext_ln95_fu_963_p1) + unsigned(zext_ln95_3_fu_953_p1));
    and_ln1_fu_1008_p3 <= (tmp_12_reg_1418 & ap_const_lv2_0);
    and_ln_fu_956_p3 <= (tmp_9_reg_1402 & ap_const_lv2_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_block_state1_pp0_stage0_iter0, ap_block_state6_pp0_stage0_iter5, ap_block_state7_pp0_stage0_iter6)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_pp0_stage0_iter6)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_pp0_stage0_iter5)) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_block_state1_pp0_stage0_iter0, ap_block_state6_pp0_stage0_iter5, ap_block_state7_pp0_stage0_iter6, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((dst_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_pp0_stage0_iter6))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((dst_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6_pp0_stage0_iter5))) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_block_state1_pp0_stage0_iter0, ap_block_state6_pp0_stage0_iter5, ap_block_state7_pp0_stage0_iter6, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((dst_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_pp0_stage0_iter6))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((dst_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6_pp0_stage0_iter5))) or ((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(src_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (src_TVALID_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state6_pp0_stage0_iter5_assign_proc : process(dst_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage0_iter5 <= (dst_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state7_pp0_stage0_iter6_assign_proc : process(regslice_both_dst_V_data_V_U_apdone_blk, dst_TREADY_int_regslice)
    begin
                ap_block_state7_pp0_stage0_iter6 <= ((dst_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    blue_fu_1177_p3 <= 
        ap_const_lv8_FF when (icmp_ln113_fu_1171_p2(0) = '1') else 
        trunc_ln113_fu_1109_p1;
    blue_sum_fu_1103_p3 <= 
        empty_18_reg_1456 when (abscond13_reg_1462(0) = '1') else 
        empty_19_fu_1098_p2;
    dn_fu_1185_p4 <= ((blue_fu_1177_p3 & green_fu_1153_p3) & red_fu_1129_p3);

    dst_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, dst_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            dst_TDATA_blk_n <= dst_TREADY_int_regslice;
        else 
            dst_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_TDATA_int_regslice <= 
        p_in_data_reg_1247_pp0_iter4_reg when (or_ln119_fu_1215_p2(0) = '1') else 
        zext_ln116_fu_1195_p1;
    dst_TVALID <= regslice_both_dst_V_data_V_U_vld_out;

    dst_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_TVALID_int_regslice <= ap_const_logic_1;
        else 
            dst_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    empty_14_fu_943_p1 <= sub_ln86_fu_937_p2(11 - 1 downto 0);
    empty_15_fu_1068_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(empty_14_reg_1434));
    empty_16_fu_995_p1 <= sub_ln97_fu_989_p2(11 - 1 downto 0);
    empty_17_fu_1083_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(empty_16_reg_1445));
    empty_18_fu_1047_p1 <= sub_ln107_fu_1041_p2(11 - 1 downto 0);
    empty_19_fu_1098_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(empty_18_reg_1456));
    green_fu_1153_p3 <= 
        ap_const_lv8_FF when (icmp_ln112_fu_1147_p2(0) = '1') else 
        trunc_ln112_fu_1094_p1;
    green_sum_fu_1088_p3 <= 
        empty_16_reg_1445 when (abscond10_reg_1451(0) = '1') else 
        empty_17_fu_1083_p2;
    hfilt_stream_stream_axis_0_buffer_1_address1 <= zext_ln67_1_fu_444_p1(11 - 1 downto 0);

    hfilt_stream_stream_axis_0_buffer_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_buffer_1_ce1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hfilt_stream_stream_axis_0_buffer_1_we1_assign_proc : process(hfilt_stream_stream_axis_0_selection_q1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((hfilt_stream_stream_axis_0_selection_q1 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_buffer_1_we1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_buffer_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    hfilt_stream_stream_axis_0_buffer_2_address1 <= zext_ln67_1_fu_444_p1(11 - 1 downto 0);

    hfilt_stream_stream_axis_0_buffer_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_buffer_2_ce1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hfilt_stream_stream_axis_0_buffer_2_we1_assign_proc : process(hfilt_stream_stream_axis_0_selection_q1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((hfilt_stream_stream_axis_0_selection_q1 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_buffer_2_we1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_buffer_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    hfilt_stream_stream_axis_0_buffer_address1 <= zext_ln67_1_fu_444_p1(11 - 1 downto 0);

    hfilt_stream_stream_axis_0_buffer_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_buffer_ce1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hfilt_stream_stream_axis_0_buffer_we1_assign_proc : process(hfilt_stream_stream_axis_0_selection_q1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((not((hfilt_stream_stream_axis_0_selection_q1 = ap_const_lv2_1)) and not((hfilt_stream_stream_axis_0_selection_q1 = ap_const_lv2_0)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_buffer_we1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;

    hfilt_stream_stream_axis_0_selection_1_address0 <= zext_ln67_2_fu_451_p1(2 - 1 downto 0);
    hfilt_stream_stream_axis_0_selection_1_address1 <= zext_ln67_fu_375_p1(2 - 1 downto 0);

    hfilt_stream_stream_axis_0_selection_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_selection_1_ce0 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_selection_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hfilt_stream_stream_axis_0_selection_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            hfilt_stream_stream_axis_0_selection_1_ce1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_selection_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hfilt_stream_stream_axis_0_selection_2_address0 <= zext_ln67_2_fu_451_p1(2 - 1 downto 0);
    hfilt_stream_stream_axis_0_selection_2_address1 <= zext_ln67_fu_375_p1(2 - 1 downto 0);

    hfilt_stream_stream_axis_0_selection_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_selection_2_ce0 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_selection_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hfilt_stream_stream_axis_0_selection_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            hfilt_stream_stream_axis_0_selection_2_ce1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_selection_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hfilt_stream_stream_axis_0_selection_address0 <= zext_ln67_2_fu_451_p1(2 - 1 downto 0);
    hfilt_stream_stream_axis_0_selection_address1 <= zext_ln67_fu_375_p1(2 - 1 downto 0);

    hfilt_stream_stream_axis_0_selection_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hfilt_stream_stream_axis_0_selection_ce0 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_selection_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hfilt_stream_stream_axis_0_selection_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            hfilt_stream_stream_axis_0_selection_ce1 <= ap_const_logic_1;
        else 
            hfilt_stream_stream_axis_0_selection_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln111_fu_1123_p2 <= "0" when (tmp_15_fu_1113_p4 = ap_const_lv3_0) else "1";
    icmp_ln112_fu_1147_p2 <= "0" when (tmp_16_fu_1137_p4 = ap_const_lv3_0) else "1";
    icmp_ln113_fu_1171_p2 <= "0" when (tmp_17_fu_1161_p4 = ap_const_lv3_0) else "1";
    icmp_ln119_1_fu_1209_p2 <= "1" when (tmp_19_fu_1199_p4 = ap_const_lv15_0) else "0";
    icmp_ln119_fu_468_p2 <= "1" when (tmp_18_fu_458_p4 = ap_const_lv15_0) else "0";
    icmp_ln147_fu_382_p2 <= "1" when (select_ln58_3_fu_367_p3 = ap_const_lv8_2) else "0";
    icmp_ln159_fu_487_p2 <= "1" when (select_ln58_2_fu_437_p3 = ap_const_lv8_2) else "0";
    or_ln119_fu_1215_p2 <= (icmp_ln119_reg_1359_pp0_iter4_reg or icmp_ln119_1_fu_1209_p2);
    or_ln55_fu_402_p2 <= (src_TUSER_int_regslice or src_TLAST_int_regslice);
    red_fu_1129_p3 <= 
        ap_const_lv8_FF when (icmp_ln111_fu_1123_p2(0) = '1') else 
        trunc_ln111_fu_1079_p1;
    red_sum_fu_1073_p3 <= 
        empty_14_reg_1434 when (abscond_reg_1440(0) = '1') else 
        empty_15_fu_1068_p2;
    select_ln147_fu_394_p3 <= 
        ap_const_lv8_0 when (icmp_ln147_fu_382_p2(0) = '1') else 
        add_ln153_fu_388_p2;
    select_ln159_fu_499_p3 <= 
        ap_const_lv8_0 when (icmp_ln159_fu_487_p2(0) = '1') else 
        add_ln165_fu_493_p2;
    select_ln55_1_fu_480_p3 <= 
        ap_const_lv16_0 when (p_in_last_reg_1270(0) = '1') else 
        add_ln157_fu_474_p2;
    select_ln55_2_fu_408_p3 <= 
        select_ln147_fu_394_p3 when (src_TLAST_int_regslice(0) = '1') else 
        ap_const_lv8_0;
    select_ln55_fu_1234_p3 <= 
        add_ln146_fu_1228_p2 when (p_in_last_reg_1270_pp0_iter4_reg(0) = '1') else 
        ap_const_lv16_0;
    select_ln58_1_fu_430_p3 <= 
        ap_const_lv16_0 when (p_in_user_reg_1262(0) = '1') else 
        x;
    select_ln58_2_fu_437_p3 <= 
        ap_const_lv8_0 when (p_in_user_reg_1262(0) = '1') else 
        select_active_order;
    select_ln58_3_fu_367_p3 <= 
        ap_const_lv8_0 when (src_TUSER_int_regslice(0) = '1') else 
        select_order;
    select_ln58_fu_1061_p3 <= 
        ap_const_lv16_0 when (p_in_user_reg_1262_pp0_iter4_reg(0) = '1') else 
        y;
    shl_ln_fu_904_p3 <= (trunc_ln84_reg_1386 & ap_const_lv2_0);

    src_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, src_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            src_TDATA_blk_n <= src_TVALID_int_regslice;
        else 
            src_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    src_TREADY <= regslice_both_src_V_data_V_U_ack_in;

    src_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            src_TREADY_int_regslice <= ap_const_logic_1;
        else 
            src_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln105_fu_1035_p2 <= std_logic_vector(unsigned(zext_ln106_fu_1025_p1) - unsigned(zext_ln105_1_fu_1032_p1));
    sub_ln107_fu_1041_p2 <= std_logic_vector(unsigned(sub_ln105_fu_1035_p2) - unsigned(zext_ln104_2_fu_1029_p1));
    sub_ln84_fu_931_p2 <= std_logic_vector(unsigned(zext_ln87_fu_921_p1) - unsigned(zext_ln84_3_fu_928_p1));
    sub_ln86_fu_937_p2 <= std_logic_vector(unsigned(sub_ln84_fu_931_p2) - unsigned(zext_ln83_1_fu_925_p1));
    sub_ln95_fu_983_p2 <= std_logic_vector(unsigned(zext_ln96_fu_973_p1) - unsigned(zext_ln95_1_fu_980_p1));
    sub_ln97_fu_989_p2 <= std_logic_vector(unsigned(sub_ln95_fu_983_p2) - unsigned(zext_ln94_2_fu_977_p1));
    tmp_10_fu_824_p4 <= tmp_3_fu_639_p5(23 downto 16);
    tmp_11_fu_838_p4 <= tmp_4_fu_670_p5(23 downto 16);
    tmp_13_fu_862_p4 <= tmp_1_reg_1379(23 downto 16);
    tmp_15_fu_1113_p4 <= red_sum_fu_1073_p3(10 downto 8);
    tmp_16_fu_1137_p4 <= green_sum_fu_1088_p3(10 downto 8);
    tmp_17_fu_1161_p4 <= blue_sum_fu_1103_p3(10 downto 8);
    tmp_18_fu_458_p4 <= select_ln58_1_fu_430_p3(15 downto 1);
    tmp_19_fu_1199_p4 <= select_ln58_fu_1061_p3(15 downto 1);
    tmp_1_fu_583_p7 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_7_fu_747_p4 <= tmp_3_fu_639_p5(15 downto 8);
    tmp_8_fu_761_p4 <= tmp_4_fu_670_p5(15 downto 8);
    tmp_fu_531_p7 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_785_p4 <= tmp_1_reg_1379(15 downto 8);
    trunc_ln111_fu_1079_p1 <= red_sum_fu_1073_p3(8 - 1 downto 0);
    trunc_ln112_fu_1094_p1 <= green_sum_fu_1088_p3(8 - 1 downto 0);
    trunc_ln113_fu_1109_p1 <= blue_sum_fu_1103_p3(8 - 1 downto 0);
    trunc_ln55_fu_359_p1 <= src_TDATA_int_regslice(24 - 1 downto 0);
    trunc_ln81_fu_650_p1 <= tmp_3_fu_639_p5(8 - 1 downto 0);
    trunc_ln83_fu_681_p1 <= tmp_4_fu_670_p5(8 - 1 downto 0);
    trunc_ln84_fu_700_p1 <= tmp_5_fu_689_p5(8 - 1 downto 0);
    trunc_ln85_fu_620_p1 <= tmp_1_reg_1379(8 - 1 downto 0);
    trunc_ln87_fu_727_p1 <= tmp_6_fu_716_p5(8 - 1 downto 0);
    zext_ln104_1_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_824_p4),10));
    zext_ln104_2_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_1424),12));
    zext_ln104_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_1_fu_885_p2),10));
    zext_ln105_1_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_reg_1429),12));
    zext_ln105_2_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_838_p4),9));
    zext_ln105_3_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_1418),11));
    zext_ln105_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1_fu_1008_p3),11));
    zext_ln106_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln105_fu_1019_p2),12));
    zext_ln108_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_862_p4),9));
    zext_ln116_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dn_fu_1185_p4),32));
    zext_ln67_1_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_1_fu_430_p3),64));
    zext_ln67_2_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_2_fu_437_p3),64));
    zext_ln67_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_3_fu_367_p3),64));
    zext_ln70_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln85_fu_620_p1),9));
    zext_ln83_1_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln87_reg_1392),12));
    zext_ln83_2_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln83_1_fu_731_p2),10));
    zext_ln83_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln81_fu_650_p1),10));
    zext_ln84_1_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln84_reg_1386),11));
    zext_ln84_2_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_904_p3),11));
    zext_ln84_3_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln83_reg_1397),12));
    zext_ln84_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln83_fu_681_p1),9));
    zext_ln87_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln84_fu_915_p2),12));
    zext_ln94_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_747_p4),10));
    zext_ln94_2_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1408),12));
    zext_ln94_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_1_fu_808_p2),10));
    zext_ln95_1_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_reg_1413),12));
    zext_ln95_2_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_761_p4),9));
    zext_ln95_3_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1402),11));
    zext_ln95_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_956_p3),11));
    zext_ln96_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln95_fu_967_p2),12));
    zext_ln98_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_785_p4),9));
end behav;
